# ==============================
# 🚀 Backend Dockerfile (FastAPI - LegalBot with Cloud SQL Proxy)
# ==============================

FROM python:3.11-slim

# Set working directory inside container
WORKDIR /app

# ------------------------------
# 🧩 System dependencies
# ------------------------------
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    netcat-openbsd \
 && rm -rf /var/lib/apt/lists/*

# ------------------------------
# 📦 Python dependencies
# ------------------------------
# Copy requirements separately to leverage Docker layer caching
COPY legalbot/backend/requirements.txt ./requirements.txt

RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# ------------------------------
# 📁 Application source code
# ------------------------------
COPY legalbot/backend /app

# ------------------------------
# 🔐 Install Cloud SQL Auth Proxy
# ------------------------------
RUN curl -o /cloud-sql-proxy https://dl.google.com/cloudsql/cloud-sql-proxy.linux.amd64 && \
    chmod +x /cloud-sql-proxy

# ------------------------------
# ⚙️ Environment setup
# ------------------------------
# Render injects environment variables automatically from render.yaml
# No .env files are copied to keep secrets secure

# ------------------------------
# 🌐 Expose FastAPI port
# ------------------------------
EXPOSE 8705

# ------------------------------
# 🧠 Start both Cloud SQL Proxy + FastAPI together
# ------------------------------
# The Cloud SQL instance connection name should match your actual instance:
# e.g. legalcbot:asia-south1:legalbot-postgres
# It runs in the background and listens on localhost:5432
CMD /cloud-sql-proxy legalcbot:asia-south1:legalbot-postgres --port 5432 & \
    uvicorn app.main:app --host 0.0.0.0 --port 8705
